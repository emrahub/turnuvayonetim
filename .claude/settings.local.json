{
  "permissions": {
    "allow": [
      "Bash(tree:*)",
      "Bash(dir:*)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(node:*)",
      "Bash(docker-compose up:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm init:*)",
      "Bash(npm run dev:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(npm run status:*)",
      "Bash(npx prisma:*)",
      "Bash(docker:*)",
      "Bash(net start:*)",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(docker-compose:*)",
      "Bash(npm run:*)",
      "Bash(npx tsc:*)",
      "Bash(chmod:*)",
      "Bash(npx ts-node:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(tsx_file=\"$jsx_file%.jsx.tsx\")",
      "Bash(if [ -f \"$tsx_file\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(done)",
      "mcp__ide__getDiagnostics",
      "Bash(start http://localhost:3005)",
      "Bash(npm install:*)",
      "Bash(grep:*)",
      "Bash(npx next start:*)",
      "Bash(pkill:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(cmd.exe /c \"taskkill /f /pid 6756\")",
      "Bash(source:*)",
      "Bash(WS_PORT=3003 NEXT_PUBLIC_APP_URL=http://localhost:3005 npm run dev)",
      "Bash(npm ls:*)",
      "Bash(set DATABASE_URL=postgresql://postgres:postgres@localhost:5432/tournament)",
      "Bash(set NEXT_PUBLIC_APP_URL=http://localhost:3005)",
      "Bash(set NEXT_PUBLIC_API_URL=http://localhost:4000)",
      "Bash(set NEXT_PUBLIC_WS_URL=ws://localhost:3003)",
      "Bash(del /s *.js)",
      "Bash(npx tsx:*)",
      "Bash(set WS_PORT=3003)",
      "Bash(set API_PORT=4000)",
      "Bash(set JWT_SECRET=your-jwt-secret-key)",
      "Bash(set SESSION_SECRET=your-session-secret)",
      "Bash(set REDIS_URL=redis://localhost:6379)",
      "Bash(tasklist)",
      "Bash(/bashes)",
      "Bash(mklink:*)",
      "Bash(ln:*)",
      "Bash(curl:*)",
      "Bash(cmd /c:*)",
      "Bash(powershell:*)",
      "Bash(SKIP_TYPE_CHECK=true npm run build)",
      "Bash(start http://localhost:3005)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nðŸŽ‰ Initial commit: TURNUVAYONETIM Poker Tournament Management System\n\nâœ¨ Features:\n- Tournament clock with real-time WebSocket connections\n- Player management and tournament creation\n- Multi-agent AI development architecture\n- Full-stack TypeScript with Next.js + Node.js\n- PostgreSQL + Redis + Prisma ORM\n- Docker containerization support\n\nðŸ”§ Ports Configuration:\n- Frontend: http://localhost:3005 \n- WebSocket: ws://localhost:3003 \n- Backend API: http://localhost:4000\n- PostgreSQL: localhost:5432\n- Redis: localhost:6379\n\nâœ… Fixed WebSocket Connection Issues:\n- Resolved Prisma validation errors\n- Fixed port migration from 3001â†’3003 and 3000â†’3005\n- Added proper error handling for player registration\n- Tournament clock now connects successfully\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(timeout:*)",
      "Bash(start http://localhost:3003)",
      "Bash(npx turbo run dev:*)",
      "Bash(del:*)",
      "Bash(npx next dev:*)",
      "Bash(start http://localhost:3006)",
      "Bash(start http://localhost:3006/seating-demo)",
      "Bash(git commit -m \"$(cat <<''EOF''\nðŸŽ¨ Major UI/UX Improvements: Professional Poker Table Layouts\n\nâœ¨ Key Features:\n- Advanced seat positioning with collision detection algorithms  \n- Mathematical radius calculations preventing seat overlap\n- Optimized seat size (70px) and spacing (20px minimum)\n- Professional elliptical table layouts for all seat counts\n- Enhanced drag-and-drop functionality with visual feedback\n- Responsive grid layouts with proper spacing (gap-16)\n\nðŸ”§ Technical Improvements:\n- Performance optimizations with React.memo and useCallback\n- CSS loading fixes with proper postcss.config.js\n- TypeScript configuration enhancements\n- Build artifact cleanup and optimization\n- Enhanced component architecture\n\nðŸŽ¯ Layout Fixes:\n- Resolved seat overlapping issues completely\n- Improved table dimensions (min-h-[420px], min-w-[520px])\n- Better spacing algorithms for 2-10 player tables\n- Professional visual polish and animations\n\nðŸš€ Performance:\n- 60fps target achievement with optimized rendering\n- Reduced compilation time (~400ms for 1505 modules)\n- Memory-efficient component updates\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nðŸŽ¨ Major UI/UX Improvements: Professional Poker Table Layouts\n\nâœ¨ Key Features:\n- Advanced seat positioning with collision detection algorithms  \n- Mathematical radius calculations preventing seat overlap\n- Optimized seat size (70px) and spacing (20px minimum)\n- Professional elliptical table layouts for all seat counts\n- Enhanced drag-and-drop functionality with visual feedback\n- Responsive grid layouts with proper spacing (gap-16)\n\nðŸ”§ Technical Improvements:\n- Performance optimizations with React.memo and useCallback\n- CSS loading fixes with proper postcss.config.js\n- TypeScript configuration enhancements\n- Enhanced component architecture\n\nðŸŽ¯ Layout Fixes:\n- Resolved seat overlapping issues completely\n- Improved table dimensions (min-h-[420px], min-w-[520px])\n- Better spacing algorithms for 2-10 player tables\n- Professional visual polish and animations\n\nðŸš€ Performance:\n- 60fps target achievement with optimized rendering\n- Reduced compilation time (~400ms for 1505 modules)\n- Memory-efficient component updates\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(.yenidenbaslat.bat)",
      "Bash(START-ALL.bat)",
      "Bash(start cmd /k START-ALL.bat)",
      "Bash(cmd.exe:*)",
      "Bash(start cmd /k yenidenbaslat.bat)",
      "Bash(if exist output rmdir /s /q output)"
    ],
    "deny": [],
    "ask": []
  }
}
